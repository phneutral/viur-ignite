@charset "UTF-8";
/* BUTTONS */

// Prefixes and objects:
// .btn-
// .btn-group

@btn-backgroundColor: #e7e5e5;
@btn-hoverColor: lighten(@backgroundColor, 5%);
@btn-activeColor: lighten(@backgroundColor, 10%);
@btn-disabledColor: desaturate(@backgroundColor, 20%);
@btn-padding: @defaultPadding;
@btn-margin: @defaultMargin;
@btn-borderWidth: @defaultBorderWidth;
@btn-borderRadius: @defaultBorderRadius;
@btn-shadow: @defaultShadow;
@btn-shadowHover: @defaultShadow+1;
@btn-shadowColor: @defaultShadowColor;
@btn-fontWeight: @fontWeightNormal;

.btn when (@button=true) {
  .genericBtn();
}

.genericBtn(
  @backgroundColor: @btn-backgroundColor,
  @padding: @btn-padding,
  @margin: @btn-margin,
  @borderRadius: @btn-borderRadius,
  @borderWidth: @btn-borderWidth,
  @shadow: @btn-shadow,
  @shadowHover: @btn-shadowHover,
  @shadowColor: @btn-shadowColor,
  @fontWeight: @btn-fontWeight) {
  .basicInput(@padding, @margin, @borderRadius, @borderWidth, darken(@backgroundColor, 10%), @fontWeight);
  color: contrast(@backgroundColor, #222222, #f4f4f4);
  background-color: @backgroundColor;
  .boxShadow(@shadow, @shadowColor);
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  transition: all .3s ease;
  &:link,
  &:visited {
    color: contrast(@backgroundColor, #222222, #f4f4f4);
  }
  &:hover {
    color: contrast(@btn-hoverColor);
    background-color: @btn-hoverColor;
    .boxShadow(@shadowHover, @shadowColor);
  }
  &:active,
  &.is-active {
    color: contrast(@btn-activeColor);
    background-color: @btn-activeColor;
  }
  &.is-disabled,
  &:disabled,
  &[aria-disabled=true] {
    &:hover,
    & {
      color: darken(@btn-disabledColor, 10%);
      cursor: not-allowed;
      border-style: dashed;
      background-color: lighten(@btn-disabledColor, 30%);
      .boxShadow(0);
    }
  }
  &.is-busy,
  &.is-loading,
  &[aria-busy=true] {
    cursor: progress;

    &:hover {
      .boxShadow(@shadow, @shadowColor);
    }
  }
  & > .icon {
    align-self: center;
    width: 1.3em;
    height: 1.3em;

    &:first-child {
      margin-left: -.2em;
      margin-right: .25em;
    }
  }
  &--small {
    font-size: .8em;

    & > .icon:first-child {
      margin-right: .15em;
    }
  }
  &--large {
    font-size: 1.2em;
  }
  &--block {
    margin: @margin 0;
    width: 100%;
    text-align: center;
  }
  & > .logo {
    align-self: center;
    width: 1.3em;
    height: 1.3em;

    &:first-child {
      margin-left: -.2em;
      margin-right: .25em;
    }
  }
  &--small {
    font-size: .8em;

    & > .logo:first-child {
      margin-right: .15em;
    }
  }

}

.colorizeBtn(
  @backgroundColor,
  @borderWidth: @defaultBorderWidth,
  @shadow: 1,
  @shadowHover: 2) {
  color: contrast(darken(@backgroundColor, 15%), #222222, #f4f4f4);
  background-color: @backgroundColor;
  border: @borderWidth solid darken(@backgroundColor, 10%);
  .boxShadow(@shadow, @backgroundColor);
  &:link,
  &:visited {
    color: contrast(darken(@backgroundColor, 15%), #222222, #f4f4f4);
  }
  &:hover {
    color: contrast(darken(@backgroundColor, 15%));
    background-color: lighten(@backgroundColor, 5%);
    border: @borderWidth solid darken(@backgroundColor, 5%);
    .boxShadow(@shadowHover, @backgroundColor);
  }
  &:active,
  &.is-active {
    color: contrast(darken(@backgroundColor, 20%));
    background-color: lighten(@backgroundColor, 10%);
    border: @borderWidth solid lighten(@backgroundColor, 5%);
  }
  &.is-disabled,
  &:disabled,
  &[aria-disabled=true] {
    &:hover,
    & {
      color: lighten(desaturate(@backgroundColor, 20%), 10%);
      .boxShadow(0);
      border-style: dashed;
      background-color: lighten(desaturate(@backgroundColor, 20%), 30%);
    }
  }
  .input-group & {
    .zIndex('content', 1); // border colors are important here.
  }
}

.invertColorizedBtn(
  @backgroundColor,
  @borderWidth: @defaultBorderWidth,
  @shadow: 1,
  @shadowHover: 2) {
  color: darken(@backgroundColor, 5%);
  border: @borderWidth solid darken(@backgroundColor, 10%);
  .boxShadow(@shadow, @backgroundColor);
  &:link,
  &:visited {
    color: darken(@backgroundColor, 5%);
  }
  &:hover {
    color: contrast(darken(@backgroundColor, 15%));
    background-color: lighten(@backgroundColor, 5%);
    border: @borderWidth solid darken(@backgroundColor, 5%);
    .boxShadow(@shadowHover, @backgroundColor);
  }
  &:active,
  &.is-active {
    color: contrast(darken(@backgroundColor, 20%));
    background-color: lighten(@backgroundColor, 10%);
    border: @borderWidth solid lighten(@backgroundColor, 5%);
  }
  &.is-disabled,
  &:disabled,
  &[aria-disabled=true] {
    &:hover,
    & {
      color: lighten(desaturate(@backgroundColor, 20%), 30%);
      background-color: lighten(desaturate(@backgroundColor, 20%), 15%);
      border: @borderWidth dashed lighten(desaturate(@backgroundColor, 20%), 30%);
      .boxShadow(0);
    }
  }
  .input-group & {
    .zIndex('content', 1); // border colors are important here.
  }
}

